1. 인터페이스는 다른 인터페이스를 상속할수 있다.
2. 인터페이스는 클래스와는 달리 다중상속을 허용한다.
3. 선언방법은 extends 키워드 뒤에 상속할 인터페이스
	들을 나열한다.
	public interface 하위인터페이스 extends 상위인터페이스1,
										상위인터페이스2,3..{...}
4. 하위인터페이스를 구현하는 클래스를 만든다.
5. 이 구현 클래스는 하위인터페이스의 멤버들 뿐 아니라
	상위 인터페이스 1, 상위 인터페이스 2, 상위 인터페이스 3의
	멤버 메소드들도 모두 실체 메소드로 구현해주어야 한다.
6. 5에서와 같이 해주지 않을 시는 이 구현클래스는
	abstract를 붙여주어야한다.(하나라도 설계 인터페이스에서
	구현 되지 않은 메소드가 있으면 추상 클래스로 간주한다.)
7. 그러므로, 여기까지 완성되었으면 구현객체를 하위인터페이스
	참조변수, 상위인터페이스~ 참조변수에 모두 대입가능하다.
	예시) 하위인터페이스 변수 = new 구현클래스(...);
			상위인터페이스1 변수 = new 구현클래스(...);
			상위인터페이스2 변수 = new 구현클래스(...);
			상위인터페이스3 변수 = new 구현클래스(...);
		*이때, 구현객체의 메소드중에서 해당 참조변수인 
		인터페이스에 있는 각각의 메소드(자신에게 속한것)만 호출가능.